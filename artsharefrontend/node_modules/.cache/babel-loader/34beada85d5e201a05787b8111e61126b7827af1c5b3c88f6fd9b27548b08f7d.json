{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matem\\\\Desktop\\\\artsharefrontend\\\\artshare-frontend\\\\src\\\\components\\\\Navbar.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  const token = localStorage.getItem(\"token\");\n  let isAdmin = false;\n  if (token) {\n    try {\n      const decodedToken = jwtDecode(token); // Decode the token\n      isAdmin = decodedToken.role === \"admin\";\n      console.log(decodedToken.role);\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-dark bg-dark p-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"navbar-brand\",\n        to: \"/gallery\",\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        children: \"ArtShare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light me-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/update-user\",\n            style: {\n              textDecoration: \"none\",\n              color: \"inherit\"\n            },\n            children: \"User Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success me-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add-painting\",\n            style: {\n              textDecoration: \"none\",\n              color: \"inherit\"\n            },\n            children: \"Add Painting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), isAdmin &&\n        /*#__PURE__*/\n        // Render the button only if the user is an admin\n        _jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/users\",\n            style: {\n              textDecoration: \"none\",\n              color: \"inherit\"\n            },\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","Link","jwtDecode","jsxDEV","_jsxDEV","Navbar","token","localStorage","getItem","isAdmin","decodedToken","role","console","log","error","className","children","to","style","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/matem/Desktop/artsharefrontend/artshare-frontend/src/components/Navbar.js"],"sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst Navbar = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  let isAdmin = false;\r\n\r\n  if (token) {\r\n    try {\r\n      const decodedToken = jwtDecode(token); // Decode the token\r\n      isAdmin = decodedToken.role === \"admin\";\r\n      console.log(decodedToken.role);\r\n    } catch (error) {\r\n      console.error(\"Error decoding token:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark p-2\">\r\n      <div className=\"container-fluid\">\r\n        <Link\r\n          className=\"navbar-brand\"\r\n          to=\"/gallery\"\r\n          style={{ textDecoration: \"none\", color: \"white\" }}\r\n        >\r\n          ArtShare\r\n        </Link>\r\n        <div>\r\n          <button className=\"btn btn-outline-light me-2\">\r\n            <Link\r\n              to=\"/update-user\"\r\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n            >\r\n              User Settings\r\n            </Link>\r\n          </button>\r\n          <button className=\"btn btn-outline-success me-2\">\r\n            <Link\r\n              to=\"/add-painting\"\r\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n            >\r\n              Add Painting\r\n            </Link>\r\n          </button>\r\n          {isAdmin && ( // Render the button only if the user is an admin\r\n            <button className=\"btn btn-outline-warning\">\r\n              <Link\r\n                to=\"/users\"\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n              >\r\n                Users\r\n              </Link>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}